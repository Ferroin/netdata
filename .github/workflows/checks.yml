---
name: Checks
on:
  push:
    paths:
      - '**.c'
      - '**.cc'
      - '**.h'
      - '**.hh'
      - '**.in'
      - '!netdata.spec.in'
      - 'CMakeLists.txt'
      - '**/Makefile*'
      - 'Makefile*'
      - '.gitignore'
      - '.github/workflows/checks.yml'
      - 'build/**'
      - 'aclk/aclk-schemas/'
      - 'ml/dlib/'
      - 'mqtt_websockets'
      - 'web/server/h2o/libh2o'
    branches:
      - master
  pull_request:
    paths: # This MUST be kept in-sync with the paths-ignore key for the checks-dummy.yml workflow.
      - '**.c'
      - '**.cc'
      - '**.h'
      - '**.hh'
      - '**.in'
      - '!netdata.spec.in'
      - 'CMakeLists.txt'
      - '**/Makefile*'
      - 'Makefile*'
      - '.gitignore'
      - '.github/workflows/checks.yml'
      - 'build/**'
      - 'aclk/aclk-schemas/'
      - 'ml/dlib/'
      - 'mqtt_websockets'
      - 'web/server/h2o/libh2o'
env:
  DISABLE_TELEMETRY: 1
concurrency:
  group: checks-${{ github.ref }}
  cancel-in-progress: true
jobs:
  libressl-checks:
    name: LibreSSL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        run: >
          docker run -v "$PWD":/netdata -w /netdata alpine:latest /bin/sh -c
          'apk add bash;
          ./packaging/installer/install-required-packages.sh --dont-wait --non-interactive netdata;
          apk del openssl openssl-dev;
          apk add libressl libressl-dev protobuf-dev;
          cmake -S . -B ./cmake-build-debug -DENABLE_H2O=On -DENABLE_DBENGINE=On -DENABLE_CLOUD=On -DENABLE_ACLK=On -DENABLE_ML=On -DENABLE_EXPORTING_MONGODB=Off -DENABLE_PLUGIN_DEBUGFS=On -DENABLE_PLUGIN_APPS=On -DENABLE_PLUGIN_FREEIPMI=Off -DENABLE_PLUGIN_NFACCT=Off -DENABLE_PLUGIN_XENSTAT=Off -DENABLE_PLUGIN_PERF=On -DENABLE_PLUGIN_SLABINFO=On -DENABLE_PLUGIN_CUPS=Off -DENABLE_PLUGIN_CGROUP_NETWORK=On -DENABLE_PLUGIN_EBPF=On -DENABLE_BUNDLED_JSONC=Off -DENABLE_BUNDLED_YAML=Off -DENABLE_BUNDLED_PROTOBUF=Off;
          cmake --build ./cmake-build-debug;'
  clang-checks:
    name: Clang
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        run: |
          docker build -f .github/dockerfiles/Dockerfile.clang .
  gitignore-check:
    name: .gitignore
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Prepare environment
        run: ./packaging/installer/install-required-packages.sh --dont-wait --non-interactive netdata
      - name: Build netdata
        run: ./netdata-installer.sh --dont-start-it --disable-telemetry --dont-wait --install-prefix /tmp/install --one-time-build
      - name: Check that repo is clean
        run: |
          git status --porcelain=v1 > /tmp/porcelain
          if [ -s /tmp/porcelain ]; then
            cat /tmp/porcelain
            exit 1
          fi
